version: '3'

vars:
  FPM_UID:
    sh: '{{if ne OS "darwin"}}id -u{{end}}'
  FPM_GID:
    sh: '{{if ne OS "darwin"}}id -g{{end}}'
  PHP_BUILD: 'docker-compose run --rm {{if ne OS "darwin"}}--user="{{.FPM_UID}}:{{.FPM_GID}}"{{end}} build-php'
  CONSOLE: '{{.PHP_BUILD}} php bin/console'

env:
  APP_ENV: '{{default "dev" .APP_ENV}}'

includes:
  # User prefix docker to call docker commands, like docker:up
  docker: ./taskfile/DockerTasks.yml
  # User prefix docker to call docker commands, like db:reset
  db: ./taskfile/DatabaseTasks.yml
  # User prefix docker to call docker commands, like test:unit
  test: ./taskfile/TestTasks.yml
  # User prefix docker to call docker commands, like qa:stan
  qa: ./taskfile/QualityTasks.yml

tasks:
  export-env-vars:
    cmds:
      - export FPM_UID={{.FPM_UID}}
      - export FPM_GID={{.FPM_GID}}

  install:
    desc: 'Install project with database.'
    cmds:
      - task: export-env-vars
      - task: docker:down
      - task: docker:up
      - task: composer:install
      # - task: db:reset
      - task: docker:ps

  ci:
    desc: 'Run C.I tasks.'
    env:
      APP_ENV: test
    cmds:
      - task: qa:die
      - task: qa:cs
      - task: qa:security
      - task: qa:stan
      - task: test:report
      - task: test:behat

  composer:install:
    desc: 'Install composer packages.'
    cmds:
      - '{{.PHP_BUILD}} composer install {{.ARGS}} {{.CLI_ARGS}}'
    vars:
      ARGS: '{{if ne .APP_ENV "dev"}}--no-interaction --prefer-dist --optimize-autoloader{{end}}'